import java.net.URL
import java.nio.file.*
import groovy.json.*

buildDir = "${projectDir}/app/build/outputs/apk/"

abstract class AssembleDebugTask extends DefaultTask {
    @Internal
    final def RELEASE_API_URL = new URL('https://api.github.com/repos/TeamVanced/VancedMicroG/releases/latest')

    @Input
    abstract Property<File> getTargetDir()

    @TaskAction
    def run() {
        println "Creating build artifact directory..."
        targetDir.get().mkdirs()

        println "Determining the latest version..."
        def slurper = new JsonSlurper()
        def data = slurper.parse(RELEASE_API_URL)
        def apkUrlString = data.assets[0].browser_download_url
        def apkUrl = new URL(apkUrlString)
        println "Latest version URL: ${apkUrlString}"

        println "Downloading APK..."
        def targetFile = new File(targetDir.get(), 'microg.apk')
        Files.copy(apkUrl.openStream(), targetFile.toPath())
        println "Download finished!"
    }
}

tasks.register('assembleDebug', AssembleDebugTask) {
    targetDir = buildDir
}

abstract class CleanTask extends DefaultTask{
    @Input
    abstract Property<File> getTargetDir()
    
    @TaskAction
    def run() {
        println "Deleting build artifact directory..."
        targetDir.get().delete()
    }
}

tasks.register('clean', CleanTask) {
    targetDir = buildDir
}
