name: Build Void Linux packages

on:
  push:
    branches:
      - source
    paths:
      - "void/**"
  workflow_dispatch:

jobs:
  init:
    name: Initialize Void Linux package builds
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find-packages.outputs.matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Find all Void Linux packages where changes are available
        id: find-packages
        run: |
          CHANGED_PKGS="$( \
            find void/srcpkgs -mindepth 1 -maxdepth 1 -type d \
            | while read -r pkg; do \
                git diff --exit-code --quiet \
                  ${{ github.event.base_ref }} \
                  ${{ github.event.before }} \
                  -- $pkg \
                || echo $pkg \
            ; done \
            | sed 's|^void/srcpkgs/||'
          )"
          echo "::notice title=Changed packages::$CHANGED_PKGS"

          echo "$CHANGED_PKGS" \
            | jq -R \
            | jq -cs '{ "changed": . }' \
            > matrix.json
          echo "matrix=$(cat matrix.json)" >> $GITHUB_OUTPUT

  build:
    name: Build all packages
    runs-on: ubuntu-latest
    needs:
      - init
    if: ${{ ! fromJson(needs.init.outputs.matrix).changed[0] }}
    strategy:
      matrix: ${{ fromJson(needs.init.outputs.matrix) }}

    steps:
      - name: Install latest version of xbps
        run: |
          curl -L https://repo-default.voidlinux.org/static/xbps-static-latest.x86_64-musl.tar.xz -o xbps.tar.xz
          tar -xJvf xbps.tar.xz
          rm xbps.tar.xz
          echo "$(pwd)/usr/bin" >> $GITHUB_PATH

      - name: Checkout void-packages repository
        uses: actions/checkout@v4
        with:
          path: void-packages
          repository: void-linux/void-packages

      - name: Checkout my repository
        uses: actions/checkout@v4
        with:
          path: rangho-packages

      - name: Copy custom package data to void-repository
        run: |
          cat rangho-packages/void/common/shlibs >> void-packages/common/shlibs
          cp -r rangho-packages/void/srcpkgs/* void-packages/srcpkgs/

      - name: Build package
        run: |
          cd void-packages
          ./xbps-src zap
          ./xbps-src binary-bootstrap
          ./xbps-src pkg "${{ matrix.changed }}"

      - name: Upload package as artifact
        uses: actions/upload-artifact@v3
        with:
          name: void-${{ matrix.changed }}
          path: void-packages/hostdir/binpkgs/${{ matrix.changed }}*.xbps

  deploy:
    name: Deploy all packages
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Checkout deploy branch
        uses: actions/checkout@v4
        with:
          ref: deploy

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Install latest version of xbps
        run: |
          curl -L https://repo-default.voidlinux.org/static/xbps-static-latest.x86_64-musl.tar.xz -o xbps.tar.xz
          tar -xJvf xbps.tar.xz
          rm xbps.tar.xz
          echo "$(pwd)/usr/bin" >> $GITHUB_PATH

      - name: Copy all packages into void directory
        run: |
          mkdir -p void
          cp ./artifacts/*/*.xbps ./void

      - name: Add all packages to the repository
        env:
          XBPS_ARCH: x86_64
          XBPS_TARGET_ARCH: x86_64
        run: |
          cd void
          for pkg in *.xbps; do
            xbps-rindex -a $pkg
          done

      - name: Sign all packages in the repository
        env:
          XBPS_ARCH: x86_64
          XBPS_TARGET_ARCH: x86_64
        run: |
          echo "${{ secrets.RANGHO_REPOSITORY_SIGNING_KEY }}" > private.pem
          xbps-rindex \
            --privkey private.pem \
            --sign \
            --signedby "RangHo Lee <hello@rangho.me>" \
            ./void
          for pkg in ./void/*.xbps; do
            xbps-rindex --privkey private.pem --sign-pkg $pkg
          done

      - name: Push updated repository to remote
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Upload Void Linux packages
          file_pattern: "void/*"
          push_options: "--force"
